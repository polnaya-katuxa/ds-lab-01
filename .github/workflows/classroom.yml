name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.4"

      - name: Install dependencies
        run: go mod download all

      - name: Tidy
        run: go mod tidy

      - name: Build service
        run: go build ./cmd/app/main.go

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.4"

      - name: Install dependencies
        run: go mod download all

      - name: Tidy
        run: go mod tidy

      - name: Run tests
        run: go test -v -cover ./...

  build-image:
    name: Build and push Docker image
    needs: ["build", "test"]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./deployments/Dockerfile
          push: true
          tags: polnayakatuxa/ds-lab-01:${{ github.sha }}

  migrate:
    name: Migrate
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: "1.20.x"

      - uses: mscno/setup-goose@v1

      - uses: azure/k8s-set-context@v1
        name: Set K8s context
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - uses: azure/setup-kubectl@v4
        name: Setup kubectl

      - name: Setup port-forward
        run: >
          kubectl port-forward
          $(kubectl get pods -o jsonpath={.items..metadata.name} -l application=spilo,cluster-name=person-service-db,spilo-role=master -n eokarpova)
          5432:5432
          -n eokarpova &

      - name: Up migrations
        run: goose --dir=deployments/migrations postgres "postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@127.0.0.1:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}?sslmode=disable" up

  deploy:
    name: Deploy
    needs: migrate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: azure/k8s-set-context@v1
        name: Set K8s context
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - uses: azure/setup-kubectl@v4
        name: Setup kubectl

      - uses: azure/setup-helm@v4.2.0
        name: Setup helm

      - name: Get pods in cluster
        run: kubectl get po -A

      - name: Helm install
        run: >
          helm upgrade --install --create-namespace --namespace eokarpova
          --set 'image.tag=${{ github.sha }}'
          --set 'config.postgres.host=${{ secrets.DB_HOST }}'
          --set 'config.postgres.port=${{ secrets.DB_PORT }}'
          --set 'config.postgres.user=${{ secrets.DB_USER }}'
          --set 'config.postgres.password=${{ secrets.DB_PASSWORD }}'
          --set 'config.postgres.db=${{ secrets.DB_NAME }}'
          person-service deployments/helm

  autograding:
    name: Autograding
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # TODO build, test and deploy project

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: postman/[inst] Lab1.postman_collection.json
          environment: postman/[inst][heroku] Lab1.postman_environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - name: Autograding
        uses: education/autograding@v1
        continue-on-error: true

      - name: Github auto grader mark
        uses: Romanow/google-sheet-autograder-marker@v1.0
        with:
          google_token: ${{secrets.GOOGLE_API_KEY}}
          sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
          homework_number: 1
          user_column: "D"
          column_offset: "F"
          mark: "'+"
